---
title: "Urban Climate Patterns: Analysis of Urban Heat Islands"
subtitle: "INFO 523 - Fall 2023 - Project Final"
author: 
  - "Ajinkya Deshmukh"
  - "Dhanyapriya Somasundaram"
  - "Kendall Beaver"
  - "Riyanshi Bohra"
  - "Udit Chaudhary"
title-slide-attributes:
    data-background-image: images/dallas-united-states-travel-blog.jpg
    data-background-size: stretch
    data-background-opacity: "0.35"

format:
  revealjs:
    theme:  ['data/customtheming.scss']
    transition: slide
    background-transition: fade
    scrollable: true    
editor: visual
execute:
  echo: false
---

```{r install_packages, include=FALSE}
### Loading the required libraries
if (!require(pacman))
  install.packages(pacman)

pacman::p_load(tidyverse,   
               dlookr,      
               formattable, 
               gt,          
               gtsummary,
               here,
               nnet,
               janitor,
               corrplot,
               dplyr,
               caret,
               formattable)
```

```{r read_data, include=FALSE}
# Using the original data
# Loading the csv into a variable using read_csv

#data <- read_csv(here("data", "Arlington.csv"))
#data <- read_csv(here("data", "Denton.csv"))
data <- read_csv(here("data", "Dallas.csv"))
```

# **What is an Urban Heat Island?** {background-image="images/dallas-united-states-travel-blog.jpg" background-opacity="0.35"}

## **UHI Definition**

-   A UHI ("Urban Heat Island") occurs when a city experiences much warmer temperatures than nearby rural areas.

![](images/UHI_Title.png){fig-align="center"}

## **3 Cities for UHI Comparison**

Dallas vs. Arlington vs. Denton

![](images/google_maps_dallas_metro.png){fig-align="center"}

# **Datasets** {background-image="images/dallas-united-states-travel-blog.jpg" background-opacity="0.35"}

## **Data Collection**

1.  Three datasets for the year 2022 were obtained from the [National Centers for Environmental Information](https://www.ncei.noaa.gov/access/search/data-search/local-climatological-data?pageNum=1&bbox=32.843,-97.215,32.629,-97.001), then combined into one major dataset.

## Data Preprocessing and Cleaning

1.  Inspect the Data
2.  Handle Missing Values
3.  Ensure Temporal Integrity

## Exploratory Data Analysis (EDA)

1.  Conduct EDA to identify patterns and relationships in the climatic data.

2.  This can include visualizations like time series plots, histograms, and scatter plots to understand temperature trends, humidity levels, etc.

# Feature Engineering {background-image="images/dallas-united-states-travel-blog.jpg" background-opacity="0.35"}

## Create Seasonal Thresholds

Create and separate the data by "Seasons" and then create thresholds for each season based on the following weather conditions:

1.  *Hourly Dry Bulb Temperature*

2.  *Hourly Relative Humidity*

3.  *Hourly Wind Speed*

## Create Seasonal Thresholds

![](images/dallas_season_quartiles.png){fig-align="center"}

## Feature Engineering

Design a classification function to label UHI intensities for hourly weather data.

``` python
def classify_uhi(row, temp_thresholds, humidity_thresholds, wind_speed_thresholds):
    season = row['Season']
    temp = row['HourlyDryBulbTemperature']
    humidity = row['HourlyRelativeHumidity']
    wind_speed = row['HourlyWindSpeed']

    # Get the thresholds for the current season
    temp_high = temp_thresholds.loc[season, 0.50]
    temp_medium = temp_thresholds.loc[season, 0.25]
    humidity_low = humidity_thresholds.loc[season, 0.25]
    wind_speed_low = wind_speed_thresholds.loc[season, 0.25]

    # Classify based on combined criteria
    if temp > temp_high and humidity < humidity_low and wind_speed < wind_speed_low:
        return 'High'
    elif temp > temp_medium:
        return 'Medium'
    else:
        return 'Low'
```

## Results of Classification Function

![](images/UHI_intensities.png){fig-align="center"}

# Classification Model Selection, Training, & Validation {background-image="images/dallas-united-states-travel-blog.jpg" background-opacity="0.35"}

## Model Selection (80% Train / 20% Test)

Developed 5 classification models:

1.  Decision Tree

2.  Random Forest

3.  XGBoost

4.  Gradient Boost

5.  SVM Classifier

## Classification Model Results

![](images/classification_model_comparison.png){fig-align="center"}

## Random Forest

``` python
rfc_model = RandomForestClassifier()
rfc_model.fit(X_train, y_train)

y_pred = rfc_model.predict(X_test)
print(classification_report(y_test, y_pred))
```

![](images/random_forest.png){fig-align="center"}

## Additional Evaluation of Random Forest

![](images/features_importance_RF.png){fig-align="center"}

# Time Series Analysis {background-image="images/dallas-united-states-travel-blog.jpg" background-opacity="0.35"}

## Time Series Analysis {background-image="images/dallas-united-states-travel-blog.jpg" background-opacity="0.35"}

# Conclusion {background-image="images/dallas-united-states-travel-blog.jpg" background-opacity="0.35"}

# Thank You! {background-image="images/dallas-united-states-travel-blog.jpg" background-opacity="0.35"}
